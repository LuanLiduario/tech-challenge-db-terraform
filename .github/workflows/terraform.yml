name: Terraform RDS Deploy

on:
  push:
    branches:
      - main

jobs:
  terraform:
    name: 'Terraform Apply'
    runs-on: ubuntu-latest

    steps:
    - name: Checkout código
      uses: actions/checkout@v3

    - name: Configurar AWS CLI
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Instalar Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.5.7

    - name: Inicializar Terraform
      run: terraform init

    - name: Validar Terraform
      run: terraform validate

    - name: Plano de execução
      run: terraform plan -var="db_user=${{ secrets.DB_USER }}" -var="db_password=${{ secrets.DB_PASSWORD }}" -var="db_name=${{ secrets.DB_NAME }}"

    - name: Tentar importar DB Subnet Group se já existir
      run: |
        if aws rds describe-db-subnet-groups --db-subnet-group-name main-subnet-group > /dev/null 2>&1; then
          terraform import aws_db_subnet_group.main main-subnet-group
        else
          echo "DB Subnet Group não existe, prosseguindo com criação"
        fi

    - name: Aplicar (Terraform Apply)
      run: terraform apply -auto-approve -var="db_user=${{ secrets.DB_USER }}" -var="db_password=${{ secrets.DB_PASSWORD }}" -var="db_name=${{ secrets.DB_NAME }}"
